/* ====== PREMIUM VERIFICATION CODE INPUT ====== */
:root {
  --primary-color: #4776E6;
  --secondary-color: #8E54E9;
  --success-color: #0ACF83;
  --error-color: #FF5757;
  --neutral-light: #F8FAFC;
  --neutral-dark: #334155;
  --input-shadow: 0 8px 16px rgba(71, 118, 230, 0.12);
  --success-shadow: 0 8px 16px rgba(10, 207, 131, 0.15);
  --error-shadow: 0 8px 16px rgba(255, 87, 87, 0.15);
  --animation-curve: cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Container styling with enhanced background */
.verification-code-container {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 12px;
  margin: 30px 0;
  position: relative;
  padding: 15px;
  border-radius: 18px;
  background: linear-gradient(135deg, rgba(255,255,255,0.6), rgba(255,255,255,0.2));
  backdrop-filter: blur(10px);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.05), 
              inset 0 0 0 1px rgba(255, 255, 255, 0.4);
  transition: all 0.5s var(--animation-curve);
  isolation: isolate;
  overflow: visible;
}

/* Animated background effect */
.verification-code-container::before {
  content: '';
  position: absolute;
  top: -200%;
  left: -100%;
  width: 300%;
  height: 500%;
  background: linear-gradient(
    45deg,
    rgba(71, 118, 230, 0.05),
    rgba(142, 84, 233, 0.05),
    rgba(71, 118, 230, 0.05),
    rgba(142, 84, 233, 0.05)
  );
  z-index: -1;
  animation: ambientShift 15s infinite linear;
  opacity: 0;
  transition: opacity 0.5s ease;
}

.verification-code-container:hover::before {
  opacity: 1;
}

/* Input wrapper with enhanced styling */
.code-input-wrapper {
  position: relative;
  width: 60px;
  height: 70px;
  perspective: 1000px;
  transform-style: preserve-3d;
  transition: all 0.5s var(--animation-curve);
  filter: drop-shadow(0 5px 5px rgba(0, 0, 0, 0.03));
  isolation: isolate;
}

/* Floating effect on hover */
.code-input-wrapper:hover {
  transform: translateY(-5px);
}

/* Input styling with glass-morphism */
.code-input {
  width: 100%;
  height: 100%;
  font-size: 28px;
  font-weight: 600;
  letter-spacing: 0.02em;
  text-align: center;
  color: var(--neutral-dark);
  background: rgba(255, 255, 255, 0.9);
  border: none;
  border-radius: 12px;
  box-shadow: var(--input-shadow);
  transition: all 0.4s var(--animation-curve);
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: textfield;
  appearance: textfield;
  backdrop-filter: blur(4px);
  transform: translateZ(0);
  caret-color: var(--primary-color);
}

/* Force single digit input on iOS/Mobile */
.code-input::-webkit-inner-spin-button,
.code-input::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Animated border effect */
.input-border {
  position: absolute;
  inset: 0;
  border-radius: 12px;
  padding: 1.5px;
  background: linear-gradient(
    45deg,
    var(--primary-color),
    var(--secondary-color),
    var(--primary-color),
    var(--secondary-color)
  );
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  background-size: 300% 300%;
  animation: borderGradientShift 4s infinite linear;
  opacity: 0;
  transition: opacity 0.4s ease;
  z-index: -1;
}

/* Show animated border on focus */
.code-input:focus + .input-border {
  opacity: 1;
}

/* Filled input styling with subtle glow */
.code-input[value]:not([value=""]) {
  background: rgba(255, 255, 255, 0.95);
  box-shadow: var(--input-shadow),
              0 0 0 2px rgba(71, 118, 230, 0.1),
              0 0 15px rgba(71, 118, 230, 0.1);
  transform: translateY(-2px) translateZ(0);
}

/* Success indicator for each input */
.success-indicator {
  position: absolute;
  bottom: -5px;
  left: 50%;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: var(--success-color);
  box-shadow: 0 0 8px var(--success-color);
  transform: translateX(-50%) scale(0);
  opacity: 0;
  transition: all 0.6s var(--animation-curve);
}

/* Error state styling */
.verification-code-container.error {
  animation: errorShake 0.6s var(--animation-curve);
}

.verification-code-container.error .code-input {
  background: rgba(255, 87, 87, 0.05);
  color: var(--error-color);
  box-shadow: var(--error-shadow),
              0 0 0 1px rgba(255, 87, 87, 0.3);
}

.verification-code-container.error .input-border {
  background: linear-gradient(
    45deg,
    var(--error-color),
    #FF8A8A,
    var(--error-color),
    #FF8A8A
  );
  opacity: 1;
}

/* Completed code styling with success effects */
.verification-code-container.all-filled .success-indicator {
  opacity: 1;
  transform: translateX(-50%) scale(1.2);
}

.verification-code-container.complete .code-input {
  background: rgba(10, 207, 131, 0.05);
  color: var(--success-color);
  box-shadow: var(--success-shadow),
              0 0 0 1px rgba(10, 207, 131, 0.3);
  transition: all 0.5s var(--animation-curve);
}

.verification-code-container.complete .code-input-wrapper {
  animation: successBounce 1s var(--animation-curve);
}

/* Staggered animation for each input on completion */
.verification-code-container.complete .code-input-wrapper:nth-child(1) { animation-delay: 0s; }
.verification-code-container.complete .code-input-wrapper:nth-child(2) { animation-delay: 0.1s; }
.verification-code-container.complete .code-input-wrapper:nth-child(3) { animation-delay: 0.2s; }
.verification-code-container.complete .code-input-wrapper:nth-child(4) { animation-delay: 0.3s; }
.verification-code-container.complete .code-input-wrapper:nth-child(5) { animation-delay: 0.4s; }
.verification-code-container.complete .code-input-wrapper:nth-child(6) { animation-delay: 0.5s; }

/* Complete state adds a subtle pulse glow effect to container */
.verification-code-container.complete::after {
  content: '';
  position: absolute;
  inset: -10px;
  border-radius: 24px;
  background: linear-gradient(135deg, rgba(10, 207, 131, 0.2), rgba(10, 207, 131, 0.05));
  z-index: -2;
  opacity: 0.5;
  animation: successPulse 2s infinite var(--animation-curve);
}

/* Submitting state styling */
.verification-code-container.submitting {
  opacity: 0.8;
}

.verification-code-container.submitting .code-input {
  background: rgba(255, 255, 255, 0.5);
  color: rgba(51, 65, 85, 0.5);
  cursor: not-allowed;
}

/* Success check icon styling */
.completion-icon {
  position: absolute;
  right: -40px;
  top: 50%;
  font-size: 28px;
  color: var(--success-color);
  transform: translateY(-50%) scale(0) rotate(-90deg);
  opacity: 0;
  filter: drop-shadow(0 0 8px rgba(10, 207, 131, 0.4));
  animation: checkIconAppear 1s 0.6s forwards var(--animation-curve);
}

/* Resend container styling */
.verification-extra {
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin-top: 6px;
}

.resend-container {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 8px;
}

/* Timer display styling */
.countdown {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 6px 12px;
  border-radius: 20px;
  background: linear-gradient(135deg, rgba(71, 118, 230, 0.1), rgba(142, 84, 233, 0.1));
  color: var(--neutral-dark);
  font-size: 14px;
  font-weight: 500;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

/* Resend button styling */
.resend-button {
  position: relative;
  padding: 6px 12px;
  border-radius: 20px;
  color: var(--primary-color);
  font-weight: 500;
  background: linear-gradient(135deg, rgba(71, 118, 230, 0.1), rgba(142, 84, 233, 0.1));
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  transition: all 0.3s ease;
  overflow: hidden;
  height: auto;
  border: none;
}

.resend-button:hover {
  background: linear-gradient(135deg, rgba(71, 118, 230, 0.15), rgba(142, 84, 233, 0.15));
  transform: translateY(-2px);
  color: var(--primary-color);
}

.resend-button:active {
  transform: translateY(0);
}

.resend-button::after {
  content: '';
  position: absolute;
  left: -100%;
  top: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: left 0.3s ease;
}

.resend-button:hover::after {
  left: 100%;
  transition: left 0.7s ease;
}

/* Initial entrance animation for the inputs */
.code-input-wrapper {
  opacity: 0;
  transform: scale(0.9) translateY(10px);
  animation: inputEntranceAnim 0.6s forwards var(--animation-curve);
}

/* Staggered entrance animation for each input */
.code-input-wrapper:nth-child(1) { animation-delay: 0.1s; }
.code-input-wrapper:nth-child(2) { animation-delay: 0.2s; }
.code-input-wrapper:nth-child(3) { animation-delay: 0.3s; }
.code-input-wrapper:nth-child(4) { animation-delay: 0.4s; }
.code-input-wrapper:nth-child(5) { animation-delay: 0.5s; }
.code-input-wrapper:nth-child(6) { animation-delay: 0.6s; }

/* Perfect responsive design for mobile */
@media (max-width: 576px) {
  .verification-code-container {
    gap: 8px;
    padding: 10px;
  }
  
  .code-input-wrapper {
    width: 45px;
    height: 55px;
  }
  
  .code-input {
    font-size: 22px;
  }
  
  .completion-icon {
    right: -30px;
    font-size: 24px;
  }
}

/* Ultra-small screen adjustments */
@media (max-width: 380px) {
  .verification-code-container {
    gap: 5px;
  }
  
  .code-input-wrapper {
    width: 38px;
    height: 48px;
  }
  
  .code-input {
    font-size: 18px;
  }
}

/* ====== ANIMATIONS ====== */

/* Input entrance animation */
@keyframes inputEntranceAnim {
  0% {
    opacity: 0;
    transform: scale(0.9) translateY(10px);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

/* Success bounce animation */
@keyframes successBounce {
  0%, 20% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-15px) scale(1.05);
  }
  50% {
    transform: translateY(-7px) scale(1.02);
  }
  65% {
    transform: translateY(-3px) scale(1.01);
  }
  80% {
    transform: translateY(-1px) scale(1);
  }
  100% {
    transform: translateY(0);
  }
}

/* Error shake animation */
@keyframes errorShake {
  0%, 100% {
    transform: translateX(0);
  }
  20% {
    transform: translateX(-8px);
  }
  40% {
    transform: translateX(8px);
  }
  60% {
    transform: translateX(-4px);
  }
  80% {
    transform: translateX(4px);
  }
}

/* Check icon animation */
@keyframes checkIconAppear {
  0% {
    opacity: 0;
    transform: translateY(-50%) scale(0) rotate(-90deg);
  }
  70% {
    opacity: 1;
    transform: translateY(-50%) scale(1.2) rotate(0deg);
  }
  100% {
    opacity: 1;
    transform: translateY(-50%) scale(1) rotate(0deg);
  }
}

/* Ambient background shift */
@keyframes ambientShift {
  0% {
    transform: translateX(0) translateY(0);
  }
  25% {
    transform: translateX(-5%) translateY(5%);
  }
  50% {
    transform: translateX(-10%) translateY(0%);
  }
  75% {
    transform: translateX(-5%) translateY(-5%);
  }
  100% {
    transform: translateX(0) translateY(0);
  }
}

/* Border gradient animation */
@keyframes borderGradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Success pulse animation */
@keyframes successPulse {
  0% {
    opacity: 0.5;
    transform: scale(1);
  }
  50% {
    opacity: 0.7;
    transform: scale(1.05);
  }
  100% {
    opacity: 0.5;
    transform: scale(1);
  }
}

/* Data particles effect (optional, adds small data particles around the container) */
.verification-code-container::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  background-image: radial-gradient(circle at 20% 20%, rgba(71, 118, 230, 0.1) 0%, transparent 2%),
                    radial-gradient(circle at 80% 30%, rgba(142, 84, 233, 0.1) 0%, transparent 2%),
                    radial-gradient(circle at 40% 70%, rgba(71, 118, 230, 0.1) 0%, transparent 2%),
                    radial-gradient(circle at 60% 80%, rgba(142, 84, 233, 0.1) 0%, transparent 2%);
  background-size: 200% 200%;
  opacity: 0;
  transform: scale(1.2);
  transition: opacity 0.5s ease;
  border-radius: 18px;
  z-index: -1;
}

.verification-code-container:hover::after {
  opacity: 1;
  animation: particleFloat 10s infinite ease-in-out alternate;
}

@keyframes particleFloat {
  0% {
    background-position: 0% 0%;
  }
  100% {
    background-position: 100% 100%;
  }
}