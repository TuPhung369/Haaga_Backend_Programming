import axios, { AxiosError } from "axios";

const API_BASE_URI = import.meta.env.VITE_API_BASE_URI;

// Define types for permissions
interface Permission {
  id: string; // Adjust if your API uses a different identifier (e.g., number)
  name: string; // Common field for permissions; add more as needed
}

// Response types
interface PermissionResponse {
  success: boolean;
  data: Permission; // Single permission for create/delete
  message?: string;
}

interface PermissionsResponse {
  success: boolean;
  data: Permission[]; // Array of permissions for getAll
  message?: string;
}

interface ApiError {
  httpCode?: number;
  message?: string;
}

// Axios instance with default headers
const apiClient = axios.create({
  baseURL: API_BASE_URI,
  headers: {
    "Content-Type": "application/json",
  },
});

export const createPermission = async (
  permissionData: Omit<Permission, "id">, // ID might be generated by server
  token: string
): Promise<PermissionResponse> => {
  try {
    const response = await apiClient.post<PermissionResponse>(
      "/permissions",
      permissionData,
      {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      }
    );
    return response.data;
  } catch (error) {
    console.error("Error creating permission:", error);
    throw error as AxiosError<ApiError>;
  }
};

export const getAllPermissions = async (
  token: string
): Promise<PermissionsResponse> => {
  try {
    const response = await apiClient.get<PermissionsResponse>("/permissions", {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    });
    return response.data;
  } catch (error) {
    console.error("Error fetching permissions:", error);
    throw error as AxiosError<ApiError>;
  }
};

export const deletePermission = async (
  permissionId: string, // Assuming permission is an ID
  token: string
): Promise<PermissionResponse> => {
  try {
    const response = await apiClient.delete<PermissionResponse>(
      `/permissions/${permissionId}`,
      {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      }
    );
    return response.data;
  } catch (error) {
    console.error("Error deleting permission:", error);
    throw error as AxiosError<ApiError>;
  }
};
